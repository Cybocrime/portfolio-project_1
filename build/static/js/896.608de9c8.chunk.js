"use strict";(self.webpackChunknew_material_ui_tut=self.webpackChunknew_material_ui_tut||[]).push([[896],{4136:(e,t,s)=>{s.r(t),s.d(t,{default:()=>m});var a=s(1014),r=s(9533),l=s(4063),n=s(7330),o=s(1049),i=(s(5853),s(6643));const c=()=>{const[e,t]=(0,a.useState)([]),[s,l]=(0,a.useState)([]),[c,m]=(0,a.useState)(null),[d,u]=(0,a.useState)(!1),g=async()=>{try{const e=(0,n.KR)(r.IG,"media"),s=await(0,n._w)(e),a=await Promise.all(s.items.map((e=>(0,n.qk)(e))));t(a),l(s.items)}catch(e){console.error("Failed to fetch images:",e.message)}};(0,a.useEffect)((()=>{g()}),[]),(0,a.useEffect)((()=>{if(null!==c){const t=new Image;t.src=e[c],t.onload=()=>u(!0)}else u(!1)}),[c,e]);return a.createElement("div",null,a.createElement("h2",null,"Image Gallery"),a.createElement(o.A,{photos:e.map((e=>({src:e,width:1,height:1}))),onClick:(e,t)=>{let{index:s}=t;return m(s)}}),null!==c&&d&&a.createElement(i.A,{mainSrc:e[c],nextSrc:e[(c+1)%e.length],prevSrc:e[(c+e.length-1)%e.length],onCloseRequest:()=>m(null),onMovePrevRequest:()=>m((c+e.length-1)%e.length),onMoveNextRequest:()=>m((c+1)%e.length),toolbarButtons:[a.createElement("button",{key:"delete",style:{padding:"10px",backgroundColor:"#f44336",color:"#fff",border:"none",borderRadius:"5px",cursor:"pointer",fontSize:"14px"},onClick:async()=>{if(null!==c)try{const e=s[c];await(0,n.XR)(e),alert("Image deleted successfully!"),m(null),g()}catch(e){console.error("Delete failed:",e.message)}}},"Delete")]}),null!==c&&!d&&a.createElement("div",null,"Loading image..."))},m=()=>{const[e,t]=(0,a.useState)(""),[s,o]=(0,a.useState)(""),[i,m]=(0,a.useState)(null),[d,u]=(0,a.useState)([]),[g,h]=(0,a.useState)(!1),p=async()=>{try{const e=(0,n.KR)(r.IG,"media"),t=await(0,n._w)(e),s=await Promise.all(t.items.map((e=>(0,n.qk)(e))));u(s)}catch(e){console.error("Failed to fetch images:",e.message)}};(0,a.useEffect)((()=>{g&&p()}),[g]);const w=async()=>{try{await(0,l.x9)(r.j2,e,s),h(!0)}catch(t){console.error("Login failed:",t.message)}};return g?a.createElement("div",null,a.createElement("h1",null,"Admin Dashboard"),a.createElement("div",null,a.createElement("input",{type:"file",onChange:e=>m(e.target.files[0])}),a.createElement("button",{onClick:async()=>{if(!i)return alert("Please select a file!");const e=(0,n.KR)(r.IG,`media/${i.name}`);try{await(0,n.D)(e,i),alert("Image uploaded successfully!"),p()}catch(t){console.error("Upload failed:",t.message)}}},"Upload Image")),a.createElement("div",null,a.createElement("h2",null,"Uploaded Images"),a.createElement(c,{images:d,fetchImages:p,handleDelete:async e=>{try{const t=(0,n.KR)(r.IG,`media/${e.split("/").pop()}`);await(0,n.XR)(t),alert("Image deleted successfully!"),p()}catch(t){console.error("Delete failed:",t.message)}}}))):a.createElement("div",null,a.createElement("h1",null,"Admin Login"),a.createElement("input",{type:"email",placeholder:"Email",value:e,onChange:e=>t(e.target.value)}),a.createElement("input",{type:"password",placeholder:"Password",value:s,onChange:e=>o(e.target.value)}),a.createElement("button",{onClick:w},"Login"))}},9533:(e,t,s)=>{s.d(t,{BC:()=>h,IG:()=>m,Ic:()=>f,Pc:()=>p,Qv:()=>u,db:()=>c,hA:()=>d,j2:()=>i,p4:()=>g,xw:()=>w});var a=s(6255),r=s(4063),l=s(8801),n=s(7330);const o=(0,a.Wp)({apiKey:"AIzaSyBw4R0Ymop0zd8ii4hZlxO4b8R6Nkt4w5Y",authDomain:"sliders-fafac.firebaseapp.com",databaseURL:"https://sliders-fafac-default-rtdb.firebaseio.com",projectId:"sliders-fafac",storageBucket:"sliders-fafac.appspot.com",messagingSenderId:"191649720492",appId:"1:191649720492:web:5156bb1192b9d2393f5709",measurementId:"G-CKXQLWJ2QW"}),i=(0,r.xI)(o),c=(0,l.aU)(o),m=(0,n.c7)(o),d=async(e,t)=>{try{if(t.length<8)throw new Error("Password must be at least 8 characters long.");if(!/[A-Z]/.test(t)||!/[0-9]/.test(t)||!/[!@#$%^&*(),.?":{}|<>]/.test(t))throw new Error("Password must include at least one uppercase letter, one number, and one special character.");if((await(0,r.Wm)(i,e)).length>0)throw new Error("Email already in use.");const s=(await(0,r.eJ)(i,e,t)).user;return await(0,r.gA)(s),s}catch(s){throw console.error("Error during signup:",s.message),s}},u=async(e,t)=>{try{const s=(await(0,r.x9)(i,e,t)).user;if(!s.emailVerified)throw new Error("Please verify your email before logging in.");const a=(0,l.rJ)(c,"sessions"),n=(0,l.P)(a,(0,l._M)("userId","==",s.uid),(0,l._M)("isActive","==",!0)),o=await(0,l.GG)(n);o.empty||o.forEach((async e=>{await(0,l.mZ)((0,l.H9)(c,"sessions",e.id),{isActive:!1})}));return{user:s,sessionId:(await(0,l.gS)(a,{userId:s.uid,email:s.email,loginTime:new Date,isActive:!0})).id}}catch(s){throw console.error("Error during sign-in:",s.message),s}},g=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;try{const t=(0,l.rJ)(c,"comments");let s=(0,l.P)(t,(0,l.My)("timestamp","desc"),(0,l.AB)(10));e&&(s=(0,l.P)(t,(0,l.My)("timestamp","desc"),(0,l.HM)(e),(0,l.AB)(10)));const a=await(0,l.GG)(s);return{comments:a.docs.map((e=>{const t=e.data();return{id:e.id,content:t.content,userEmail:t.userEmail,timestamp:t.timestamp?.toDate()||new Date,likes:t.likesUser?.length||0,dislikes:t.dislikesUser?.length||0,replies:t.replies||[],likesUser:t.likesUser||[],dislikesUser:t.dislikesUser||[]}})),lastVisible:a.docs[a.docs.length-1]}}catch(t){throw console.error("Error fetching comments:",t.message),t}},h=async(e,t)=>{try{if(!t||!t.email||!t.userId)throw new Error("User not authenticated.");const s=(0,l.rJ)(c,"comments"),a={userEmail:t.email,userId:t.userId,content:e,timestamp:(0,l.O5)(),likes:0,dislikes:0,adminEmail:"",replies:[],likesUser:[],dislikesUser:[],isEdited:!1,lastEditedTimestamp:null},r=await(0,l.gS)(s,a);return a.id=r.id,a}catch(s){throw console.error("Error adding comment:",s.message),s}},p=async(e,t)=>{try{const s=(0,l.H9)(c,"comments",e),a=await(0,l.x7)(s);if(!a.exists())throw console.error("Document not found for docId:",e),new Error(`Comment with ID ${e} not found.`);console.log("Document fetched successfully:",a.data());const r={likes:t.likes??0,dislikes:t.dislikes??0,likesUser:Array.isArray(t.likesUser)?t.likesUser:[],dislikesUser:Array.isArray(t.dislikesUser)?t.dislikesUser:[]};await(0,l.mZ)(s,r),console.log("Comment updated successfully.")}catch(s){throw console.error("Error updating Firestore document:",s.message),s}},w=async e=>{try{if(!e)throw new Error("Email address is required.");return await(0,r.J1)(i,e),console.log("Password reset email sent successfully to:",e),{success:!0,message:"Password reset email sent."}}catch(t){throw console.error("Error sending password reset email:",t.message),t}},f=async(e,t)=>{try{console.log("Debug: commentDocId passed to addReplyToComment:",e);const s=(0,l.H9)(c,"comments",e);await(0,l.mZ)(s,{replies:(0,l.hq)(t)}),console.log("Reply added successfully to comment:",e)}catch(s){throw console.error("Error adding reply to comment:",s.message),s}}}}]);
//# sourceMappingURL=896.608de9c8.chunk.js.map