{"version":3,"file":"static/js/354.99745cf0.chunk.js","mappings":"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","sources":["firebase.js","components/clientSideGallery.js","pages/gallery.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { \n  getAuth, \n  signOut, \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword, \n  sendEmailVerification, \n  fetchSignInMethodsForEmail,\n  sendPasswordResetEmail\n} from \"firebase/auth\";\nimport { \n  getFirestore, \n  collection, \n  addDoc, \n  getDocs,  \n  updateDoc, \n  doc, \n  getDoc,\n  arrayUnion, \n  query, \n  orderBy, \n  limit, \n  startAfter, \n  serverTimestamp,where\n} from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Firebase Services\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst storage = getStorage(app);\n\nexport { auth, db, storage };\n\n// User Signup Function\nexport const signUpWithEmailAndPassword = async (email, password) => {\n  try {\n    if (password.length < 8) throw new Error(\"Password must be at least 8 characters long.\");\n    if (!/[A-Z]/.test(password) || !/[0-9]/.test(password) || !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n      throw new Error(\"Password must include at least one uppercase letter, one number, and one special character.\");\n    }\n\n    const methods = await fetchSignInMethodsForEmail(auth, email);\n    if (methods.length > 0) throw new Error(\"Email already in use.\");\n\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n\n    await sendEmailVerification(user);\n    return user;\n  } catch (error) {\n    console.error(\"Error during signup:\", error.message);\n    throw error;\n  }\n};\n\n// Sign-In Function\nexport const signInUser = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n\n    if (!user.emailVerified) throw new Error(\"Please verify your email before logging in.\");\n\n    // Check for existing sessions\n    const sessionsRef = collection(db, \"sessions\");\n    const q = query(sessionsRef, where(\"userId\", \"==\", user.uid), where(\"isActive\", \"==\", true));\n    const querySnapshot = await getDocs(q);\n\n    // Log out old sessions\n    if (!querySnapshot.empty) {\n      querySnapshot.forEach(async (docSnap) => {\n        await updateDoc(doc(db, \"sessions\", docSnap.id), { isActive: false });\n      });\n    }\n\n    // Store new session\n    const sessionRef = await addDoc(sessionsRef, {\n      userId: user.uid,\n      email: user.email,\n      loginTime: new Date(),\n      isActive: true,\n    });\n\n    return { user, sessionId: sessionRef.id };\n  } catch (error) {\n    console.error(\"Error during sign-in:\", error.message);\n    throw error;\n  }\n};\n\n// Log-Out Function\nexport const logOutUser = async (sessionId) => {\n  try {\n    if (!sessionId) throw new Error(\"Session ID is required for logout.\");\n\n    // Mark session as inactive in Firestore\n    const sessionRef = doc(db, \"sessions\", sessionId);\n    await updateDoc(sessionRef, { isActive: false, logoutTime: new Date() });\n\n    // Sign out from Firebase Auth\n    await signOut(auth);\n    console.log(\"User logged out successfully.\");\n  } catch (error) {\n    console.error(\"Error during logout:\", error.message);\n    throw error;\n  }\n};\n\n// Fetch Comments Function\nexport const fetchComments = async (lastVisibleDoc = null) => {\n  try {\n    const commentsRef = collection(db, \"comments\");\n    let q = query(commentsRef, orderBy(\"timestamp\", \"desc\"), limit(10));\n\n    if (lastVisibleDoc) {\n      q = query(commentsRef, orderBy(\"timestamp\", \"desc\"), startAfter(lastVisibleDoc), limit(10));\n    }\n\n    const snapshot = await getDocs(q);\n    const comments = snapshot.docs.map(doc => {\n      const data = doc.data();\n      return {\n        id: doc.id,\n        content: data.content,\n        userEmail: data.userEmail,\n        timestamp: data.timestamp?.toDate() || new Date(),\n        likes: data.likesUser?.length || 0, // Safe fallback to 0\n        dislikes: data.dislikesUser?.length || 0, // Safe fallback to 0\n        replies: data.replies || [],\n        likesUser: data.likesUser || [], // Default to empty array if undefined\n        dislikesUser: data.dislikesUser || [], // Default to empty array if undefined\n      };\n    });\n\n    return { comments, lastVisible: snapshot.docs[snapshot.docs.length - 1] };\n  } catch (error) {\n    console.error(\"Error fetching comments:\", error.message);\n    throw error;\n  }\n};\n\n// Add Comment to Firestore\nexport const addComment = async (text, currentUser) => {\n  try {\n    if (!currentUser || !currentUser.email || !currentUser.userId) {\n      throw new Error(\"User not authenticated.\");\n    }\n\n    const commentsRef = collection(db, \"comments\");\n    const newComment = {\n      userEmail: currentUser.email,\n      userId: currentUser.userId,\n      content: text,\n      timestamp: serverTimestamp(),\n      likes: 0,\n      dislikes: 0,\n      adminEmail: '',\n      replies: [],\n      likesUser: [], // Initialize as empty array\n      dislikesUser: [], // Initialize as empty array\n      isEdited: false,\n      lastEditedTimestamp: null,\n    };\n\n    const docRef = await addDoc(commentsRef, newComment);\n    newComment.id = docRef.id;\n\n    return newComment;\n  } catch (error) {\n    console.error(\"Error adding comment:\", error.message);\n    throw error;\n  }\n};\n\n// Verify Comment by Admin\nexport const verifyComment = async (commentId) => {\n  try {\n    const commentRef = doc(db, \"comments\", commentId);\n    await updateDoc(commentRef, { isVerified: true });\n    console.log(`Comment ${commentId} verified successfully.`);\n  } catch (error) {\n    console.error(\"Error verifying comment:\", error.message);\n    throw error;\n  }\n};\n\n// Update Comment in Firestore\nexport const updateCommentInFirestore = async (docId, commentData) => {\n  try {\n    const commentRef = doc(db, \"comments\", docId);\n    const docSnap = await getDoc(commentRef);\n\n    if (!docSnap.exists()) {\n      console.error(\"Document not found for docId:\", docId);\n      throw new Error(`Comment with ID ${docId} not found.`);\n    }\n\n    console.log(\"Document fetched successfully:\", docSnap.data());\n\n    // Ensure values are always defined\n    const updatedData = {\n      likes: commentData.likes ?? 0,\n      dislikes: commentData.dislikes ?? 0,\n      likesUser: Array.isArray(commentData.likesUser) ? commentData.likesUser : [],\n      dislikesUser: Array.isArray(commentData.dislikesUser) ? commentData.dislikesUser : [],\n    };\n\n    // Update Firestore document\n    await updateDoc(commentRef, updatedData);\n\n    console.log(\"Comment updated successfully.\");\n  } catch (error) {\n    console.error(\"Error updating Firestore document:\", error.message);\n    throw error;\n  }\n};\n\n// Reset Password Function\nexport const resetPassword = async (email) => {\n  try {\n    if (!email) throw new Error(\"Email address is required.\");\n    await sendPasswordResetEmail(auth, email);\n    console.log(\"Password reset email sent successfully to:\", email);\n    return { success: true, message: \"Password reset email sent.\" };\n  } catch (error) {\n    console.error(\"Error sending password reset email:\", error.message);\n    throw error;\n  }\n};\n\n// Reply to a comment function\nexport const addReplyToComment = async (commentDocId, newReply) => {\n  try {\n    console.log(\"Debug: commentDocId passed to addReplyToComment:\", commentDocId);\n    // Get the reference to the main comment document\n    const commentRef = doc(db, \"comments\", commentDocId);\n\n    // Update the replies array in the comment document using arrayUnion from Firestore SDK\n    await updateDoc(commentRef, {\n      replies: arrayUnion(newReply), // Add the new reply to the replies array\n    });\n\n    console.log(\"Reply added successfully to comment:\", commentDocId);\n  } catch (error) {\n    console.error(\"Error adding reply to comment:\", error.message);\n    throw error;\n  }\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { storage } from '../firebase.js';\nimport { ref, listAll, getDownloadURL } from 'firebase/storage';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css'; // Include lightbox default styles\nimport CircularProgress from '@mui/material/CircularProgress'; // Import CircularProgress from Material-UI\n\nconst InfiniteScrollGallery = () => {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [lightboxIndex, setLightboxIndex] = useState(null);\n  const [isLightboxOpen, setIsLightboxOpen] = useState(false); // New state to track modal\n  const [error, setError] = useState(null); // State to track error\n  const allImages = useRef([]);\n  const galleryEndRef = useRef(null);\n  const itemsPerPage = 10;\n\n  const fetchImages = async () => {\n    setIsLoading(true);\n    setError(null); // Reset error state before fetching\n\n    try {\n      const storageRef = ref(storage, 'media'); // Replace 'media' with your Firebase storage folder\n      const result = await listAll(storageRef);\n      const urls = await Promise.all(result.items.map((item) => getDownloadURL(item)));\n      allImages.current = urls;\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      setError('Failed to fetch images. Please try again later.');\n      console.error('Error fetching images:', err); // Log error for debugging but avoid exposing sensitive info\n    }\n  };\n\n  const loadMoreImages = async () => {\n    if (isLoading || allImages.current.length === 0) return;\n\n    const startIndex = (page - 1) * itemsPerPage;\n    const endIndex = page * itemsPerPage;\n    const newImages = allImages.current.slice(startIndex, endIndex);\n\n    setImages((prev) => [...prev, ...newImages]);\n    setPage((prev) => prev + 1);\n  };\n\n  useEffect(() => {\n    const init = async () => {\n      await fetchImages();\n      loadMoreImages();\n    };\n    init();\n  }, []);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting && !isLoading) {\n          loadMoreImages();\n        }\n      },\n      { threshold: 1.0 }\n    );\n\n    if (galleryEndRef.current) observer.observe(galleryEndRef.current);\n\n    return () => observer.disconnect();\n  }, [page]);\n\n  const openLightbox = (index) => {\n    if (isLightboxOpen) return; // Prevent opening multiple instances\n    setLightboxIndex(index);\n    setIsLightboxOpen(true);\n    // Disable body scrolling for the lightbox\n    document.body.style.overflow = 'hidden';\n  };\n\n  const closeLightbox = () => {\n    setIsLightboxOpen(false);\n    setTimeout(() => setLightboxIndex(null), 300); // Delay to allow proper unmount\n    document.body.style.overflow = 'auto'; // Re-enable body scrolling\n  };\n\n  return (\n    <div>\n      {/* Show error message if fetch fails */}\n      {error && (\n        <div\n          style={{\n            width: '100%',\n            height: '150px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'relative',\n            borderRadius: '20px',\n            color: 'red',\n            fontWeight: 'bold',\n          }}\n        >\n          {error}\n        </div>\n      )}\n\n      {/* Show CircularProgress preloader when images are loading */}\n      {isLoading && !error && (\n        <div\n          style={{\n            width: '100%',\n            height: '150px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'relative',\n            borderRadius: '20px',\n          }}\n        >\n          <CircularProgress size={50} />\n        </div>\n      )}\n      \n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(120px, 1fr))',\n          gap: '4px',\n          pointerEvents: isLightboxOpen ? 'none' : 'auto', // Disable interactions with gallery when modal is open\n          height: isLightboxOpen ? '100vh' : 'auto', // Prevent gallery scroll when modal is open\n          overflow: isLightboxOpen ? 'hidden' : 'auto', // Prevent scroll when modal is open\n        }}\n      >\n        {/* Display images after fetch */}\n        {!isLoading && !error &&\n          images.map((src, index) => (\n            <div\n              key={index}\n              className=\"lazy-image\"\n              style={{\n                width: '100%',\n                height: '150px',\n                backgroundColor: '#f0f0f0',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                position: 'relative',\n                cursor: 'pointer',\n                borderRadius: '0px',\n              }}\n              onClick={() => openLightbox(index)}\n            >\n              <img\n                src={src}\n                alt={`Image ${index}`}\n                style={{\n                  width: '100%',\n                  height: '100%',\n                  objectFit: 'cover',\n                  borderRadius: '0px',\n                }}\n              />\n            </div>\n          ))}\n      </div>\n      <div ref={galleryEndRef} style={{ height: '50px', marginTop: '10px' }} />\n\n      {/* Lightbox Implementation */}\n      {isLightboxOpen && lightboxIndex !== null && images[lightboxIndex] && (\n        <Lightbox\n          mainSrc={images[lightboxIndex]}\n          nextSrc={images[(lightboxIndex + 1) % images.length]}\n          prevSrc={images[(lightboxIndex + images.length - 1) % images.length]}\n          onCloseRequest={closeLightbox}\n          onMovePrevRequest={() => {\n            setLightboxIndex((lightboxIndex + images.length - 1) % images.length);\n          }}\n          onMoveNextRequest={() => {\n            setLightboxIndex((lightboxIndex + 1) % images.length);\n          }}\n          reactModalStyle={{\n            overlay: { zIndex: 1301 }, // Ensure it's above other elements\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default InfiniteScrollGallery;\n","import React from 'react';\nimport ClientGallery from '../components/clientSideGallery.js';\nimport { Box } from '@mui/material';  // Import Box for layout styling\n\nfunction App() {\n  return (\n    <Box sx={{ padding: 2 }}>\n      <ClientGallery />\n    </Box>\n  );\n}\n\nexport default App;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { getCircularProgressUtilityClass } from \"./circularProgressClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`;\nconst circularDashKeyframe = keyframes`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst rotateAnimation = typeof circularRotateKeyframe !== 'string' ? css`\n        animation: ${circularRotateKeyframe} 1.4s linear infinite;\n      ` : null;\nconst dashAnimation = typeof circularDashKeyframe !== 'string' ? css`\n        animation: ${circularDashKeyframe} 1.4s ease-in-out infinite;\n      ` : null;\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-block',\n  variants: [{\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: theme.transitions.create('transform')\n    }\n  }, {\n    props: {\n      variant: 'indeterminate'\n    },\n    style: rotateAnimation || {\n      animation: `${circularRotateKeyframe} 1.4s linear infinite`\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  }))]\n})));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  stroke: 'currentColor',\n  variants: [{\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    }\n  }, {\n    props: {\n      variant: 'indeterminate'\n    },\n    style: {\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink,\n    style: dashAnimation || {\n      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.\n      animation: `${circularDashKeyframe} 1.4s ease-in-out infinite`\n    }\n  }]\n})));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, {\n    className: clsx(classes.root, className),\n    style: {\n      width: size,\n      height: size,\n      ...rootStyle,\n      ...style\n    },\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\",\n    ...rootProps,\n    ...other,\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;"],"names":["app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","storage","getStorage","signUpWithEmailAndPassword","async","email","password","length","Error","test","fetchSignInMethodsForEmail","user","createUserWithEmailAndPassword","sendEmailVerification","error","console","message","signInUser","signInWithEmailAndPassword","emailVerified","sessionsRef","collection","q","query","where","uid","querySnapshot","getDocs","empty","forEach","updateDoc","doc","docSnap","id","isActive","sessionId","addDoc","userId","loginTime","Date","fetchComments","lastVisibleDoc","arguments","undefined","commentsRef","orderBy","limit","startAfter","snapshot","comments","docs","map","data","content","userEmail","timestamp","toDate","likes","likesUser","dislikes","dislikesUser","replies","lastVisible","addComment","text","currentUser","newComment","serverTimestamp","adminEmail","isEdited","lastEditedTimestamp","docRef","updateCommentInFirestore","docId","commentData","commentRef","getDoc","exists","log","updatedData","Array","isArray","resetPassword","sendPasswordResetEmail","success","addReplyToComment","commentDocId","newReply","arrayUnion","InfiniteScrollGallery","images","setImages","useState","isLoading","setIsLoading","page","setPage","lightboxIndex","setLightboxIndex","isLightboxOpen","setIsLightboxOpen","setError","allImages","useRef","galleryEndRef","loadMoreImages","current","startIndex","endIndex","newImages","slice","prev","useEffect","storageRef","ref","result","listAll","urls","Promise","all","items","item","getDownloadURL","err","fetchImages","init","observer","IntersectionObserver","_ref","entry","isIntersecting","threshold","observe","disconnect","React","style","width","height","display","alignItems","justifyContent","position","borderRadius","color","fontWeight","CircularProgress","size","gridTemplateColumns","gap","pointerEvents","overflow","src","index","key","className","backgroundColor","cursor","onClick","document","body","openLightbox","alt","objectFit","marginTop","Lightbox","mainSrc","nextSrc","prevSrc","onCloseRequest","closeLightbox","setTimeout","onMovePrevRequest","onMoveNextRequest","reactModalStyle","overlay","zIndex","Box","sx","padding","ClientGallery","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","rotateAnimation","css","dashAnimation","CircularProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","capitalize","memoTheme","theme","variants","transition","transitions","create","animation","Object","entries","palette","filter","createSimplePaletteValueFilter","_ref2","vars","main","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","inProps","useDefaultProps","thickness","value","other","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","_jsx","clsx","role","children","viewBox","cx","cy","r","fill","strokeWidth"],"sourceRoot":""}